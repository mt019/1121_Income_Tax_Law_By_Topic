name: Build and Deploy bookdown

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Restore TinyTeX cache
        id: tinytex-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.TinyTeX
            ~/.local/share/TinyTeX
          key: tinytex-${{ runner.os }}-${{ hashFiles('ops/scripts/tinytex-packages.txt') }}

      - name: Install system fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-noto-cjk

      - name: Setup TinyTeX
        uses: r-lib/actions/setup-tinytex@v2

      - name: Cache and install R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: true
          extra-packages: |
            any::bookdown
            any::remotes
            any::tinytex

      - name: Install TinyTeX addons
        if: steps.tinytex-cache.outputs.cache-hit != 'true'
        run: |
          pkgs <- readLines("ops/scripts/tinytex-packages.txt")
          pkgs <- pkgs[pkgs != ""]
          if (length(pkgs)) tinytex::tlmgr_install(pkgs)
        shell: Rscript {0}

      - name: Build site
        run: |
          full <- tolower(Sys.getenv("BUILD_FULL", "true"))
          formats <- c("bookdown::gitbook")
          if (full %in% c("true", "1", "yes", "on")) {
            formats <- c(formats, "bookdown::pdf_book", "bookdown::epub_book")
          }
          for (fmt in formats) {
            message("Rendering format: ", fmt)
            bookdown::render_book(
              input = "index.Rmd",
              output_format = fmt,
              clean_envir = FALSE,
              new_session = FALSE
            )
          }
        shell: Rscript {0}
        env:
          BUILD_FULL: true

      - name: Generate SEO files
        run: |
          source("ops/scripts/generate_seo_files.R")
        shell: Rscript {0}

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
